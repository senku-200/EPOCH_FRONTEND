"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _GlitchBase = _interopRequireDefault(require("../__core__/components/GlitchBase"));

require("./style/index.css");

var GLITCH_ID = 'glitch-text';

var GlitchText = function GlitchText(_ref) {
  var children = _ref.children,
      _ref$color = _ref.color1,
      color1 = _ref$color === void 0 ? 'rgba(77, 171, 245, .5)' : _ref$color,
      _ref$color2 = _ref.color2,
      color2 = _ref$color2 === void 0 ? 'rgba(245, 0, 87, .3)' : _ref$color2,
      _ref$duration = _ref.duration,
      duration = _ref$duration === void 0 ? 2000 : _ref$duration,
      _ref$component = _ref.component,
      component = _ref$component === void 0 ? 'span' : _ref$component,
      rest = (0, _objectWithoutProperties2.default)(_ref, ["children", "color1", "color2", "duration", "component"]);
  return /*#__PURE__*/_react.default.createElement(_GlitchBase.default, (0, _extends2.default)({
    duration: duration,
    glitchId: GLITCH_ID,
    restCssVarList: JSON.stringify([['--text-shadow-color-1', color1], ['--text-shadow-color-2', color2]])
  }, rest), /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/(0, _react.createElement)(component, null, children)));
};

var _default = /*#__PURE__*/(0, _react.memo)(GlitchText);

exports.default = _default;
GlitchText.propTypes = {
  children: _propTypes.default.node.isRequired,
  color1: _propTypes.default.string,
  color2: _propTypes.default.string,
  component: _propTypes.default.string,
  disabled: _propTypes.default.bool,
  duration: _propTypes.default.number,
  iterationCount: _propTypes.default.string,
  onHover: _propTypes.default.bool,
  onMouseEnter: _propTypes.default.func,
  onMouseLeave: _propTypes.default.func
};